---
- name: Print out the original node status
  shell: oc get nodes -o wide | tee original_nodes.txt

- name: Print out the original projects
  shell: oc get projects --all-namespaces | tee original_projects.txt

- name: Print out the original pods
  shell: oc get pods --all-namespaces | tee original_pods.txt

- name: Fetch the original files
  fetch:
    src: "{{ item }}"
    dest: "{{ backup_directory_local }}/"
    flat: yes
  with_items:
    - original_nodes.txt
    - original_projects.txt
    - original_pods.txt

- name: Set the KUBECONFIG environment variable
  set_fact:
    kubeconfig: "KUBECONFIG={{ ansible_user_dir }}/.kube/config"

- name: Run the Cluster loader program
  shell: >
    {{ kubeconfig }}
    /usr/libexec/atomic-openshift/extended.test --ginkgo.focus="Load cluster"
    --viper-config={{ cluster_loader_configuration }} 2>&1 | tee {{ ansible_user_dir }}/load_cluster.log
  args:
    chdir: "{{ cluster_loader_base_directory }}"
    executable: /bin/bash

- name: "Wait for {{ delay_seconds }} seconds to allow pods to start"
  pause:
    seconds: "{{ delay_seconds }}"

- name: Print out the node status after cluster load
  shell: oc get nodes -o wide | tee cluster_loaded_nodes.txt

- name: Print out the current projects after cluster load
  shell: oc get projects --all-namespaces | tee cluster_loaded_projects.txt

- name: Print out the current pods after cluster load
  shell: oc get pods --all-namespaces | tee cluster_loaded_pods.txt

- name: Fetch the files after the cluster is loaded
  fetch:
    src: "{{ item }}"
    dest: "{{ backup_directory_local }}/"
    flat: yes
  with_items:
    - load_cluster.log
    - cluster_loaded_nodes.txt
    - cluster_loaded_projects.txt
    - cluster_loaded_pods.txt
